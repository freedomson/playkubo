---
#
# Tasks to be applied to some servers
#
# - name: Install the package "netsh"
#   become: true
#   become_method: sudo
#   apt:
#     name: netsh

- name: grep provider_ssi
  become: true
  become_method: sudo
  shell: cat /etc/wpa_supplicant/wpa_supplicant.conf | grep -o -P '(?<=ssid=").*(?=")'
  register: parsed_provider_ssid
  
- name: grep provider_psk
  become: true
  become_method: sudo
  shell: cat /etc/wpa_supplicant/wpa_supplicant.conf | grep -o -P '(?<=psk=").*(?=")'
  register: parsed_provider_psk

- fail:
    msg: "The system may not be provisioned according to the parsed_provider_ssid status."
  when: parsed_provider_ssid.stdout_lines[0] == ""

- fail:
    msg: "The system may not be provisioned according to the parsed_provider_psk status."
  when: parsed_provider_psk.stdout_lines[0] == ""

- template:
    src: "{{playbook_dir}}/roles/playkubo/templates/configure-ap-and-wifi.sh"
    dest: /home/pi/configure-ap-and-wifi.sh
    owner: pi
    mode: 0775

- name: Set fact provider_ssid
  set_fact: provider_ssid="{{ parsed_provider_ssid.stdout_lines[0] }}"

- name: Set fact provider_psk
  set_fact: provider_psk="{{ parsed_provider_psk.stdout_lines[0] }}"

- name: Set fact playkubo_ap_ssid
  set_fact: playkubo_ap_ssid="{{ (parsed_provider_ssid.stdout_lines[0] + '_' + playkubo_ssid) | truncate(32, True, '') }}"

- name: Set fact playkubo_ap_psk
  set_fact: playkubo_ap_psk="PLAYKUBO{{ 10000 | random }}"

# USER PRIVATE INTERNET PROVIDER SECRETS
- debug:
    msg: "provider_ssid:{{provider_ssid}} provider_psk:{{provider_psk}} playkubo_ap_ssid:{{playkubo_ap_ssid}} playkubo_ap_psk: {{playkubo_ap_psk}}"

- name: Prepare AP and Wifi
  become: true
  become_method: sudo
  shell: /home/pi/configure-ap-and-wifi.sh {{provider_ssid}} {{provider_psk}} {{playkubo_ap_ssid}} {{playkubo_ap_psk}}

- name: Disallow password authentication
  become: true
  become_method: sudo
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^#PasswordAuthentication"
              line="PasswordAuthentication no"
              state=present
  notify: Restart ssh
  when: hostvars['localhost']['ssh_status'] == 1

- name: Disallow root SSH access
  become: true
  become_method: sudo
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^#PermitRootLogin"
              line="PermitRootLogin no"
              state=present
  notify: Restart ssh
  when: hostvars['localhost']['ssh_status'] == 1
...
